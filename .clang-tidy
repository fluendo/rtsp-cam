---
Checks:
    -*,
    clang-diagnostic-*,
    clang-analyzer-*,
    concurrency-*,
    bugprone-*,
    cppcoreguidelines-*,
    -cppcoreguidelines-pro-type-cstyle-cast,
    -cppcoreguidelines-avoid-c-arrays,
    -cppcoreguidelines-pro-bounds-constant-array-index,
    -cppcoreguidelines-pro-type-vararg,
    -cppcoreguidelines-pro-type-reinterpret-cast,
    -cppcoreguidelines-pro-bounds-array-to-pointer-decay,
    misc-*,
    modernize-*,
    -modernize-avoid-c-arrays,
    -modernize-use-trailing-return-type,
    -modernize-loop-convert,
    -modernize-use-nodiscard,
    performance-*,
    -performance-no-int-to-ptr,
    portability-*,
    readability-*
WarningsAsErrors: '*'
HeaderFilterRegex: 'src(/|\\)[^/\\]+\.h$'
AnalyzeTemporaryDtors: false
FormatStyle: file
CheckOptions:
    - { key: readability-identifier-naming.StructCase,            value: CamelCase  }
    - { key: readability-identifier-naming.EnumCase,              value: CamelCase  }
    - { key: readability-identifier-naming.EnumConstantCase,      value: UPPER_CASE }
    - { key: readability-identifier-naming.ClassCase,             value: CamelCase  }
    - { key: readability-identifier-naming.UnionCase,             value: CamelCase  }
    - { key: readability-identifier-naming.NamespaceCase,         value: camelBack  }
    - { key: readability-identifier-naming.MethodCase,            value: lower_case }
    - { key: readability-identifier-naming.VariableCase,          value: lower_case }
    - { key: readability-identifier-naming.FunctionCase,          value: lower_case }
    - { key: readability-identifier-naming.MemberCase,            value: lower_case }
    - { key: readability-identifier-naming.MemberPrefix,          value: m_         }
    - { key: readability-identifier-naming.ConstexprVariableCase, value: aNy_CasE   }
    - { key: readability-identifier-naming.ConstexprFunctionCase, value: aNy_CasE   }
...
